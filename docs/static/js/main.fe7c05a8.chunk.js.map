{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categ","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAgB5C,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAK,OAAKP,GAAL,mBAAmBO,OACtCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,gDACkCC,UAAUH,GAD5C,+DAECI,MAAMF,GAFP,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAGQ,EAAIG,cAAP,aAAG,EAAYC,iBAAiBZ,QARxB,kBAWZM,GAXY,4CAAH,sDCEPO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAI/B,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAOf,EAAKgB,IAAKN,IACtB,4BAAIA,QCLHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAa,IAAD,EACXd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHwB,mBAC9BC,EAD8B,KACvBC,EADuB,KAkBrC,OAZAC,qBAAU,WACLxB,EAAQC,GACPwB,MAAK,SAAAC,GAECH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAIrB,CAACpB,IAEGqB,EDfwBK,CAAa1B,GAA/Ba,EAFsB,EAE5BN,KAAaa,EAFe,EAEfA,QAEpB,OACI,qCACA,qBAAIJ,UAAU,oCAAd,cAAoDhB,KAGpD,sBAAKgB,UAAU,YAAf,UAEKI,GAAW,mBAAGJ,UAAU,mCAAb,qBAEJH,EAAOJ,KAAI,SAAAC,GAAG,OACX,cAAC,EAAD,eAEIA,GADGA,EAAIC,cEiBnBgB,EA/BM,WAAO,MAGYzC,mBAAS,CAAE,cAHvB,mBAGjB0C,EAHiB,KAGL3C,EAHK,KASxB,OACA,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBAEA,6BAEQ2C,EAAWnB,KAAI,SAAAT,GAAQ,OACvB,cAAC,EAAD,CAEIA,SAAYA,GADPA,YCnBzB6B,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.fe7c05a8.chunk.js","sourcesContent":["import React,{useState} from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({setCategories}) => {\n    \n    const [inputValue, setInputValue] = useState('')\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value)\n    }\n\n    const handleSubmit = (e) =>{\n        e.preventDefault();\n        if(inputValue.trim().length>2){\n            setCategories(categ => [inputValue,...categ]);\n            setInputValue('');\n        }\n        \n    }\n    return (\n        <form onSubmit={handleSubmit}>\n            <input \n                type=\"text\"\n                value={inputValue}\n                onChange= { handleInputChange}\n            />\n            \n            \n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories : PropTypes.func.isRequired\n}","export const getGifs = async (category) => {\n    const url = `http://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=rqJ9jUBRpOS6qeDz4RiCYA5pPImUlnnY`\n    const resp  = await fetch(url);\n    const {data} = await resp.json();\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url : img.images?.downsized_medium.url\n        }\n    })\n    return gifs;\n    \n}","import React from 'react'\n\nexport const GifGridItem = ({title,url}) => {\n    \n   \n    \n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src = {url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n\n    const {data: images,loading} = useFetchGifs(category);\n\n    return (\n        <>\n        <h3 className=\"animate__animated animate__fadeIn\"> {category}</h3>\n\n\n        <div className=\"card-grid\">\n            \n            {loading && <p className=\"animate__animated animate__flash\">Loading</p> }\n                {\n                    images.map(img => (\n                       <GifGridItem \n                       key = {img.id}\n                       {...img} />\n                        ))\n                }\n                \n            \n        \n        </div>\n        </>\n    )\n}\n","import {useState, useEffect} from 'react'\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) =>{\n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(()=> {\n         getGifs(category)\n         .then(imgs => {\n           \n                setstate({\n                    data:imgs,\n                    loading:false\n                })\n            \n         })\n     },[category])\n\n    return state; \n}","import React,{useState} from 'react';\nimport PropTypes from 'prop-types'\nimport { AddCategory } from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = ( ) => {\n\n    // const categories = [ 'One Punch', 'Samurai X', 'Dragon Ball']\n    const [categories, setCategories] = useState([ 'One Punch']);\n\n    // const handleAdd = () =>{\n    //     setCategories(categ => [...categ,'HunterXHunter']);\n    // }\n\n    return (\n    <>\n        <h2>GifExpertApp</h2>\n        <AddCategory setCategories = { setCategories }/>\n        <hr/>\n\n        <ol>\n            {\n                categories.map(category => \n                <GifGrid \n                    key={category}\n                    category = {category} />\n                )\n            }\n        </ol>\n\n    </>\n    );\n}\n\n\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}